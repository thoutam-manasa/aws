Camp1 : EC2 Session Commands 
------------------------------
1. sudo su -
2. yum install -y git
3. yum install -y docker
4. service docker start
5. usermod -a -G docker ec2-user
6. docker run --name mythicalmysfitsfrontend -p 3000:3000 -p 8180:8180 --rm -i -t -d karthiknarayanpdec11/mythicalmysfits:latest
7. docker exec -d mythicalmysfitsfrontend npm start 

Selenium Grid Setup in EC2 machine:
-----------------------------------
#  Starting selenium-hub container
docker run -d -p 4444:4444 --name selenium-hub selenium/hub

# Starting chrome and Firefox container
docker run -d --link selenium-hub:hub selenium/node-chrome
docker run -d --link selenium-hub:hub selenium/node-firefox


Camp3 : Steps For Copy Scripts From Github To CodeCommit
---------------------------------------------------------
1. Ensure you have S3 bucket created as "233632-mohanraj-mathavan-bootcamp-results"
    Create folders like smoke, regression, devicefarm and fargate under "233632-mohanraj-mathavan-bootcamp-results" bucket
2. Create new repo in aws commit : 233632-mohanraj-mathavan-functional-automation
3. Clone the new aws code commit repo : git clone https://git-codecommit.us-west-2.amazonaws.com/v1/repos/233632-mohanraj-mathavan-functional-automation
4. Clone the repo from github : git clone https://github.com/TechnologyBootCamps/aws-bootcamp-functional-automation
5. Copy only file and folder from aws-bootcamp-functional-automation to 233632-mohanraj-mathavan-functional-automation using cloud9 GUI
6. Execute the commands below
    cd 233632-mohanraj-mathavan-functional-automation
    git add .
    git commit -m "init commit"  --quiet
    git push -u origin master --quiet
7. Refresh and view the new repository : 233632-mohanraj-mathavan-functional-automation

8. Create Code build for smoke and regression
9. Execute code build and verify the results in S3
10. Create Code pipeline to run smoke and regreession in sequential


 

Camp5 : 
-----------------------------
ECS+EC2 Highlevel Steps:
------------------------
1. Cluster creation
2. Task definitions Creation (nginxdemos/hello ,	Hard limit => 256, 	Port 80 : 80)
3. Create Service in cluster to run task definition (Number of tasks should be 1)
4. Verify EC2 instance
5. Launch nginx portal by just navigating EC2 ip address

-----------------------------------------------------------------------------------------------------------------------


Fargate Session Commands 
-----------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------
Namespace creation:
-------------------
Create namespace in cloudmap as "233632_bootcamp"
Select "API calls and DNS queries in VPCs"
Create default VPC
------------------------------------------------------------------
Cluster creation:
------------------
Create Cluster using Networking only - 
cluster name as "aws-233632-grid-cluster"
press - "click" button
------------------------------------------------------------------
HUB - Task defintion:
---------------------
Create Task defintion for "aws-233632-hub"
task memory : 1 gb
task cpu : 0.5 vcpu
add container as "seleniumhub"
Image : selenium/hub:3.141.59-zirconium
Port : 4444
Entry points :  /bin/bash,-c
Command   :  /bin/bash -c "export GRID_HUB_HOST=\"$(cat /etc/hosts | tail -1 | awk {'print $1'})\" && /bin/bash /opt/bin/entry_point.sh"

------------------------------------------------------------------
Node - Task defintion:
----------------------
Create Task defintion for "aws-233632-node"

task memory : 1 gb
task cpu : 0.5 vcpu
add container as "seleniumnode"
Image : selenium/node-chrome:3.141.59-zirconium
Port : 5555
Entry points :  /bin/bash,-c
Command   :  /bin/bash -c "export NODE_HOST=\"$(curl -s $ECS_CONTAINER_METADATA_URI/task | jq -r '.Containers[0].Networks[0].IPv4Addresses[0]')\" && /bin/bash /opt/bin/entry_point.sh"
Environment variables :
HUB_PORT => 4444
HUB_HOST => hubservice.233632_bootcamp


View Task Defintions :
aws-233632-hub
aws-233632-node
------------------------------------------------------------------
HUB - Service creation:
-----------------------
Goto Cluster => aws-233632-grid-cluster
Create Service for "aws-233632-hub"
service name as : aws-hub-serivce
Number of tasks : 1
Next
select cluster vpc
select subnet
Edit group to default group
public ip enabled


Enable service discovery integrations
select namespace as "233632_bootcamp"
service discovery name as "hubservice"
------------------------------------------------------------------
NODE - Service creation:
------------------------
Goto Cluster => aws-233632-grid-cluster
Create Service for "aws-233632-node"
service name as : aws-node-service
Number of tasks : 1
Next

select cluster vpc
select subnet
Edit group to default group
public ip enabled

Enable service discovery integrations
select namespace as "233632_bootcamp"
service discovery name as "node"
------------------------------------------------------------------
